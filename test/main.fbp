# INPORT=VoiceDecoder.In:FPath
# INPORT=Ai.In:Text
# INPORT=Merge.Ctx:Ctx

# VoiceDecoder(VoiceDecoder) Next -> Path Voice(BaiduVoice)
# VoiceDecoder() Out -> In Reply(Final)

# Voice() Next -> In Ai(ApiAi)
# Voice() Out -> In Reply()

# Ai() Out -> Result Merge()
# Merge(QuerySave) Out -> Ctx CM(ContextManager)
# CM() Process -> Ctx OrderIntDispatcher(IntentCheck)

# # CM() Process -> Ctx PraiseIntDispatcher(IntentCheck)
# # PraiseIntDispatcher() Out -> Ctx Praise(Praise)
# # Praise() Out -> In Reply(Final)

# # PraiseIntDispatcher() Next -> Ctx CriIntDispatcher(IntentCheck)
# # CriIntDispatcher() Out -> Ctx Critical(Critical)
# # Critical() Out -> In Reply()

# # CriIntDispatcher() Next -> Ctx AbuseIntDispatcher(IntentCheck)
# # AbuseIntDispatcher() Out -> Ctx Abuse(Abuse)
# # Abuse() Out -> In Reply()

# # AbuseIntDispatcher() Next -> Ctx GreetIntDispatcher(IntentCheck)
# # GreetIntDispatcher() Out -> Ctx Greet(Greet)
# # Greet() Out -> In Reply()

# # GreetIntDispatcher() Next -> Ctx RobotIntDispatcher(IntentCheck)
# # RobotIntDispatcher() Out -> Ctx Robot(Robot)
# # Robot() Out -> In Reply()

# # RobotIntDispatcher() Next -> Ctx StockIntDispatcher(IntentCheck)
# # StockIntDispatcher() Out -> Ctx StockQuery(StockQuery)
# # StockQuery() Out -> In Reply()

# # StockIntDispatcher() Next -> Ctx PriceIntDispatcher(IntentCheck)
# # PriceIntDispatcher() Out -> Ctx PriceQuery(PriceQuery)
# # PriceQuery() Out -> In Reply()

# # PriceIntDispatcher() Next -> Ctx OrderIntDispatcher(IntentCheck)

# OrderIntDispatcher() Out -> Ctx OpenOrder(Order)
# OpenOrder() Out -> In Reply()

# OrderIntDispatcher() Next -> Ctx Unimplemented(Unimplemented)
# Unimplemented() Out -> In Reply()

# 'b56957fa6f8c4f94aeaace533390b685' -> Token Ai()
# '123456789' -> SessionId Ai()

# # APP_ID = '9926043'
# # API_KEY = 'dE3SNoLcH5KuhhwVc8hhL5fL'
# # SECRET_KEY = 'fwMleRZAsW9vmMf2GcmlVexXNooTVHGa'
# '9926043' -> AppId Voice()
# 'dE3SNoLcH5KuhhwVc8hhL5fL' -> ApiKey Voice()
# 'fwMleRZAsW9vmMf2GcmlVexXNooTVHGa' -> SecKey Voice()

# # '表扬' -> Intent PraiseIntDispatcher()
# # 0.40 -> Score PraiseIntDispatcher()

# # '批评' -> Intent CriIntDispatcher()
# # 0.40 -> Score CriIntDispatcher()

# # '辱骂' -> Intent AbuseIntDispatcher()
# # 0.40 -> Score AbuseIntDispatcher()

# # '招呼' -> Intent GreetIntDispatcher()
# # 0.40 -> Score GreetIntDispatcher()

# # '关于机器人' -> Intent RobotIntDispatcher()
# # 0.40 -> Score RobotIntDispatcher()

# # '问货' -> Intent StockIntDispatcher()
# # 0.40 -> Score StockIntDispatcher()

# # '问价' -> Intent PriceIntDispatcher()
# # 0.40 -> Score PriceIntDispatcher()

# '今天' -> Deftime OpenOrder()

# '开单' -> Intent OrderIntDispatcher()
# 0.35 -> Score OrderIntDispatcher()



# FOR TEST
# INPORT=Line.Ctx:In
 
# Line(MyInput) Out -> In Luis(LuisAnalyze)
# Line() Next -> Ctx Merge(QuerySave)
# Luis() Out -> Result Merge()
# Merge() Out -> Ctx CM(ContextManager)
# CM() Process -> Ctx IntentDispatcher(IntentCheck)
# IntentDispatcher() Out -> Ctx OpenOrder(Order)
# OpenOrder() Out -> In reply(Final)

# '8b65b31f-05b0-4da0-ab98-afa62c0e80ae' -> AppId Luis()
# '9c6711ad95c846a792248515cb6d1a23' -> Key Luis()
# '请输入你的话' -> Prompt Line()
# '开单' -> Intent IntentDispatcher()
# 0.70 -> Score IntentDispatcher()

INPORT=Line.Ctx:In

Line(MyInput) Out -> In VoiceDecoder(VoiceDecoder)
VoiceDecoder() Next -> Path Voice(BaiduVoice)
VoiceDecoder() Out -> In Reply(Final)

Voice() Next -> In Ai(ApiAi)
Voice() Out -> In Reply()

'9926043' -> AppId Voice()
'dE3SNoLcH5KuhhwVc8hhL5fL' -> ApiKey Voice()
'fwMleRZAsW9vmMf2GcmlVexXNooTVHGa' -> SecKey Voice()
'请输入你的话' -> Prompt Line()